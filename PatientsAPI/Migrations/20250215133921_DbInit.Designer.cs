// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PatientsAPI.Data;

#nullable disable

namespace PatientsAPI.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250215133921_DbInit")]
    partial class DbInit
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PatientsAPI.Domain.Gender", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("GenderName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Genders");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            GenderName = "Male"
                        },
                        new
                        {
                            Id = 2,
                            GenderName = "Female"
                        });
                });

            modelBuilder.Entity("PatientsAPI.Domain.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("GenderId")
                        .HasColumnType("int");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("PatientId");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            PatientId = 1,
                            Address = "1 Brookside St",
                            DateOfBirth = new DateTime(1966, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 2,
                            LastName = "TestNone",
                            PhoneNumber = "100-222-3333"
                        },
                        new
                        {
                            PatientId = 2,
                            Address = "2 High St",
                            DateOfBirth = new DateTime(1945, 6, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 1,
                            LastName = "TestBorderline",
                            PhoneNumber = "200-333-4444"
                        },
                        new
                        {
                            PatientId = 3,
                            Address = "3 Club Road",
                            DateOfBirth = new DateTime(2004, 6, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 1,
                            LastName = "TestDanger",
                            PhoneNumber = "300-444-5555"
                        },
                        new
                        {
                            PatientId = 4,
                            Address = "4 Valley Dr",
                            DateOfBirth = new DateTime(2002, 6, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Test",
                            GenderId = 2,
                            LastName = "TestEarlyOnset",
                            PhoneNumber = "400-555-6666"
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
